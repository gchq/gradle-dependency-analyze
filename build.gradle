plugins {
  id 'java'
  id 'groovy'
  id 'maven'
  id 'maven-publish'
  id 'com.jfrog.bintray' version '1.8.4'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

//if the project has a value for the passed property (i.e from the cmd line via -PpropName=xxx)
//use that, else use a default value
ext.getPropertyOrDefault = { propName, defaultValue ->
    def val;
    if (project.hasProperty(propName) && project.getProperty(propName) != "unspecified" && project.getProperty(propName) != "") {
        val = project.getProperty(propName)
        println "Using property [$propName] with value [$val]"
    } else {
        val = defaultValue
        println "Property [$propName] has no value, using default value [$val]"
    }
    return val;
}

//group = 'ca.cutterslade.gradle'
group = 'stroom'
version = getPropertyOrDefault('version', 'SNAPSHOT')

repositories {
  jcenter()
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile 'org.apache.maven.shared:maven-dependency-analyzer:1.10'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact javadocJar {classifier 'javadoc'}
      artifact sourcesJar {classifier 'sources'}
    }
  }

  repositories {
    maven {
      url "$buildDir/repo"
    }
  }
}

//configuration for the bintray plugin for uploading maven artefacts to bintray
//see https://github.com/bintray/gradle-bintray-plugin
//run task bintrayUpload to push the files, assuming BINTRAY_USER/KEY are set as env vars
bintray {
  //Must never write these to log or system out
  user = System.getenv('BINTRAY_USER') //set in Travis UI
  key = System.getenv('BINTRAY_KEY') //set in Travis UI

  //immediately make the artefacts public
  publish = true

  publications = ['mavenJava']
  pkg {
    repo = 'stroom'
    name = project.name
    userOrg = 'stroom'
    licenses = ['Apache-2.0']
    desc = 'Dependency analysis plugin for gradle'
    websiteUrl = 'https://github.com/gchq/gradle-dependency-analyze'
    issueTrackerUrl = 'https://github.com/gchq/gradle-dependency-analyze/issues'
    vcsUrl = 'https://github.com/gchq/gradle-dependency-analyze.git'
    version {
      name = "${version}"
      desc = "gradle-dependency-analyze-${version}"
      released = new Date()
      vcsTag = "${version}"
      gpg {
        //Bintray will self-sign the files
        sign = true //Determines whether to GPG sign the files. The default is false
      }
    }
  }
}

//if (this.hasProperty('jfrogUser') && this.hasProperty('jfrogPassword')) {
  //artifactory {
    //contextUrl = 'http://oss.jfrog.org/artifactory'
    //publish {
      //repository {
        //repoKey = 'oss-snapshot-local'
        //username = jfrogUser
        //password = jfrogPassword
        //maven = true
      //}
      //defaults {
        //publications('mavenJava')
      //}
    //}
  //}
//}

task javaVersionCheck() {
  doLast {
    if (JavaVersion.current() != JavaVersion.VERSION_11) {
      throw new GradleException('Build must be run on Java 11')
    }
  }
}

tasks.withType(PublishToMavenRepository) {
  it.dependsOn check
  it.dependsOn javaVersionCheck
}

